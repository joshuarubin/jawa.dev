<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on Joshua Rubin</title><link>https://jawa.dev/categories/programming/</link><description>Recent content in Programming on Joshua Rubin</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© {year} — &lt;a href="https://creativecommons.org/licenses/by/4.0/">Some rights reserved&lt;/a></copyright><lastBuildDate>Thu, 20 Oct 2016 00:00:00 -0700</lastBuildDate><atom:link href="https://jawa.dev/categories/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Interface Pitfalls and Harnessing `io.Reader`</title><link>https://jawa.dev/posts/2016/10/interface-pitfalls-and-harnessing-io.reader/</link><pubDate>Thu, 20 Oct 2016 00:00:00 -0700</pubDate><guid>https://jawa.dev/posts/2016/10/interface-pitfalls-and-harnessing-io.reader/</guid><description>When Go was first announced I remember looking over the list of its key features and feeling astonished that a new language would omit the classes and inheritance that I had come to depend on so heavily. My interest faded quickly.
Fast forward a few years and our team has fully embraced Go for its speed, tooling, standard library, concurrency support and all the other things we know and love about Go.</description></item></channel></rss>